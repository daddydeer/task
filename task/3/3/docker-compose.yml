version: '3.8'
services:
  mysql:
    image: mysql:8.3.0
    restart: always
    env_file: log_pass.env
    volumes:
      - ./data/mysql:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  wordpress:
    image: wordpress:6.4.3
    restart: always
    ports:
      - 4000:80
    env_file: log_pass.env
    depends_on:
      - mysql
    volumes:
      - ./data/wp:/var/www/html
    environment:
      - WP_HOME=https://localhost
      - WP_SITEURL=https://localhost
      - WORDPRESS_CONFIG_EXTRA=
          define('WP_HOME', getenv_docker('WP_HOME', 'http://localhost'));
          define('WP_SITEURL', getenv_docker('WP_SITEURL', 'http://localhost'));

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.1
    restart: always
    ports:
      - 4001:80
    env_file: log_pass.env
    depends_on:
      - mysql
    environment:
      - PMA_HOST=mysql
      - PMA_ABSOLUTE_URI=https://localhost/phpmyadmin/
      - PHPMYADMIN_FORCE_HTTPS=true

  nginx:
    image: nginx:1.24.0
    restart: always
    depends_on:
      - wordpress
      - phpmyadmin
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl_certificate.crt:/etc/ssl/certs/ssl_certificate.crt
      - ./ssl_private_key.key:/etc/ssl/certs/ssl_private_key.key
    ports:
      - 80:80
      - 443:443

  node_exporter:
    image: prom/node-exporter:v1.7.0
    volumes:
      - ./node_exporter/proc:/host/proc:ro
      - ./node_exporter/sys:/host/sys:ro
      - ./node_exporter/:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - "9100:9100"
    restart: on-failure
    depends_on:
      - nginx

  prometheus:
    image: prom/prometheus:v2.49.1
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.config.file=/web/web.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=7d'
      - '--storage.tsdb.retention.size=1GB'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/web.yml:/web/web.yml
      - prometheus_data:/prometheus/
    restart: on-failure  
    depends_on:
      - node_exporter

  grafana:
    image: grafana/grafana:10.3.1
    ports:
      - "3000:3000"
    env_file:
      - log_pass.env
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    restart: on-failure

volumes:
  grafana_data: {}
  prometheus_data: {}